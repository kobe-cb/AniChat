{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","roomID","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","console","log","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.355165a9.chunk.js","sourcesContent":["//import firebase from \"firebase\";\n//import * as firebase from \"firebase/app\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCHA5_eM13-5o5L9wVI2iDB6yL-ViUDROM\",\n    authDomain: \"anichat-c75f0.firebaseapp.com\",\n    projectId: \"anichat-c75f0\",\n    storageBucket: \"anichat-c75f0.appspot.com\",\n    messagingSenderId: \"497615259456\",\n    appId: \"1:497615259456:web:5d850e5e79187209ff9ca5\",\n    measurementId: \"G-GR3KQQP0JK\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export { auth, provider };\n  export default db;\n","import React, { useEffect, useState } from 'react'\nimport { Avatar } from \"@material-ui/core\";\nimport './SidebarChat.css';\nimport db from './firebase';\nimport { Link } from \"react-router-dom\";\n\n//avatars.dicebear site returns svg icon based on end string (rand)\nfunction SidebarChat({ id, name, addNewChat }) {\n    const [seed, setSeed] = useState('');\n    const [messages, setMessages] = useState(\"\");\n\n    useEffect(() => {\n        if (id) {\n            db.collection(\"rooms\")\n                .doc(id)\n                .collection(\"messages\")\n                .orderBy(\"timestamp\", \"desc\")\n                .onSnapshot((snapshot) => \n                    setMessages(snapshot.docs.map((doc) => doc.data()))\n            );\n        }\n    }, [id]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [])\n\n    const createChat = () => {\n        const roomName = prompt(\"Please enter name for chat room\");\n\n        if (roomName) {\n            db.collection(\"rooms\").add({\n                name: roomName,\n            });\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`}>\n            <div className='sidebarChat'>\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"sidebarChat__info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n    ): (\n        <div onClick={createChat}\n        className=\"sidebarChat\">\n            <h2>Add new Chat</h2>\n        </div>\n    );\n}\n\nexport default SidebarChat\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n<StateContext.Provider \n    value={useReducer(reducer, initialState)}>\n        {children}\n</StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","//Capital Filename since its a component\nimport React, { useEffect, useState } from \"react\";\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport SidebarChat from \"./SidebarChat\";\nimport './Sidebar.css';\nimport db from \"./firebase.js\";\nimport { useStateValue } from \"./StateProvider\";\n\n//IconButton gives icons button functionality\n//Every change makes new snapshot, rooms is our array in database\n//Unsubscribe cleans collection after its done\nfunction Sidebar() {\n    const [rooms, setRooms] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => \n            setRooms(snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    data: doc.data(),\n                }))\n            )\n        );\n\n        return () => {\n            unsubscribe();\n        }\n    }, []);\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar src={user?.photoURL}/>\n\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"sidebar__search\"> \n                <div className=\"sidebar__searchContainer\"> \n                    <SearchOutlined />\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\n                </div>\n            </div>\n    \n            <div className=\"sidebar__chats\">\n                <SidebarChat addNewChat/>\n                {rooms.map(room => (\n                    <SidebarChat key={room.id} id={room.id}\n                    name={room.data.name} />\n                ))}\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default Sidebar;","import React, { useState, useEffect } from 'react';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport \"./Chat.css\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport firebase from \"firebase/compat/app\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const { roomID } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch ] = useStateValue();\n\n    useEffect(() => {\n        if (roomID) {\n            db.collection('rooms')\n            .doc(roomID)\n            .onSnapshot((snapshot) => \n                setRoomName(snapshot.data().name));\n\n            db.collection(\"rooms\")\n                .doc(roomID)\n                .collection(\"messages\")\n                .orderBy('timestamp', 'asc')\n                .onSnapshot(snapshot => (\n                    setMessages(snapshot.docs.map(doc => doc.data()))\n            ))\n        }\n    }, [roomID]);\n\n    /* icon changes whenever roomID is detected changing */\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomID]);\n\n    /*e as event | preventdefault stops refresh*/\n    const sendMessage = (e) => {\n        e.preventDefault();\n        /*console.log('You typed >>> ', input);*/\n\n        db.collection('rooms').doc(roomID).collection('messages').add({\n            message:input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setInput(\"\");\n    }\n\n    return (\n        <div className='chat'>\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>\n                        last seen{\" \"}\n                        {new Date(\n                        messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}\n                    </p>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>    \n        \n            <div className=\"chat__body\">\n                {messages.map(message => (\n                    <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat__timestamp\">\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\n                        </span>\n                    </p>\n                ))}\n\n            </div>  \n\n            <div className=\"chat__footer\">\n                <InsertEmoticonIcon />\n                <form>\n                    <input \n                        value={input} \n                        onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" \n                        type=\"text\" \n                    />\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <MicIcon />\n                <IconButton>\n                    <RedoIcon />\n                </IconButton>\n            </div>  \n        </div>\n    )\n}\n\nexport default Chat;\n","export const initialState = {\n    user: null,\n};\n\nexport const actionTypes = {\n    SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch(action.type) {\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user,\n            };\n\n        default: \n            return state;\n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { Button } from \"@material-ui/core\";\nimport './Login.css';\nimport { auth, provider } from \"./firebase\";\nimport { actionTypes } from './reducer';\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Login() {\n    const [{}, dispatch] = useStateValue();\n\n    const signIn = () => {\n        auth\n            .signInWithPopup(provider)\n            .then((result) => {\n                dispatch({\n                    type: actionTypes.SET_USER,\n                    user: result.user,\n                });\n            })\n            .catch((error)=> alert(error.message));\n    };\n\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img\n                    src=\"https://stickershop.line-scdn.net/stickershop/v1/product/11491103/LINEStorePC/main.png;compress=true\" alt=\"\" \n                />\n                <div className=\"login__text\">\n                    <h1>Sign in to AniChat</h1>\n                </div>\n\n                <Button type=\"submit\" onClick={signIn}>\n                    Sign In With Google\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useState } from \"react\";\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport Login from \"./Login\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() { \n  const [{ user }, dispatch] = useStateValue();\n\n\n  return (\n  // BEM Naming Convention\n  <div className=\"app\">\n    {!user ? (\n      <Login />\n    ) : ( \n      <div className=\"app__body\"> {/* Main Panel */}\n        {/* Manages Room ID Switching */}\n        <Router>\n          {/* Sidebar | Always Loads*/}\n          <Sidebar />\n          {/* Chooses URL depending on Room Chosen */}\n          <Switch>\n\n            <Route path=\"/rooms/:roomID\">\n              {/* Chat */ }\n              <Chat />\n            </Route>   \n            <Route path=\"/\">\n              { /* <h1>Home Screen</h1> */ }\n              <Chat />\n            </Route>\n\n          </Switch>\n        </Router>\n      </div>\n    )}\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}