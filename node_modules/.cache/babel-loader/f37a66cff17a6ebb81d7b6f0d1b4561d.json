{"ast":null,"code":"var _jsxFileName = \"/Users/havok/KBProjects/KBproject_AniChat/AniChat/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport \"./Chat.css\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const {\n    roomID\n  } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (roomID) {\n      db.collection('rooms').doc(roomID).onSnapshot(snapshot => setRoomName(snapshot.data().name));\n      db.collection(\"rooms\").doc(roomID).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [roomID]);\n  /* icon changes whenever roomID is detected changing */\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomID]);\n  /*e as event | preventdefault stops refresh*/\n\n  const sendMessage = e => {\n    e.preventDefault();\n    console.log('You typed >>> ', input);\n    db.collection('rooms').doc(roomID).collection('messages').add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://avatars.dicebear.com/api/human/${seed}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last seen at ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__body\",\n      children: messages.map(message => {\n        var _message$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat__message ${true && \"chat__reciever\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__name\",\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__timestamp\",\n            children: new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toUTCString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: \"Send a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"VVC7+08F0Fth2mVpKCGkTn6Ztr4=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/havok/KBProjects/KBproject_AniChat/AniChat/src/Chat.js"],"names":["React","useState","useEffect","Avatar","IconButton","AttachFile","MoreVert","SearchOutlined","InsertEmoticonIcon","MicIcon","useParams","db","useStateValue","firebase","Chat","input","setInput","seed","setSeed","roomID","roomName","setRoomName","messages","setMessages","user","dispatch","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","sendMessage","e","preventDefault","console","log","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","Date","toDate","toUTCString","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport \"./Chat.css\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport firebase from \"firebase\";\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const { roomID } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch ] = useStateValue();\n\n    useEffect(() => {\n        if (roomID) {\n            db.collection('rooms')\n            .doc(roomID)\n            .onSnapshot((snapshot) => \n                setRoomName(snapshot.data().name));\n\n            db.collection(\"rooms\")\n                .doc(roomID)\n                .collection(\"messages\")\n                .orderBy('timestamp', 'asc')\n                .onSnapshot(snapshot => (\n                    setMessages(snapshot.docs.map(doc => doc.data()))\n            ))\n        }\n    }, [roomID]);\n\n    /* icon changes whenever roomID is detected changing */\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomID]);\n\n    /*e as event | preventdefault stops refresh*/\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log('You typed >>> ', input);\n\n        db.collection('rooms').doc(roomID).collection('messages').add({\n            message:input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setInput(\"\");\n    }\n\n    return (\n        <div className='chat'>\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen at ...</p>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>    \n        \n            <div className=\"chat__body\">\n                {messages.map(message => (\n                    <p className={`chat__message ${true && \"chat__reciever\"}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat__timestamp\">\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\n                        </span>\n                    </p>\n                ))}\n\n            </div>  \n\n            <div className=\"chat__footer\">\n                <InsertEmoticonIcon />\n                <form>\n                    <input \n                        value={input} \n                        onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" \n                        type=\"text\" \n                    />\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <MicIcon />\n            </div>  \n        </div>\n    )\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}