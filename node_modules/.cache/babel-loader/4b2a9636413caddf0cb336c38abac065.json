{"ast":null,"code":"import _slicedToArray from\"/Users/havok/KBProjects/KBproject_AniChat/AniChat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Avatar,IconButton}from\"@material-ui/core\";import{AttachFile,MoreVert,SearchOutlined}from\"@material-ui/icons\";import InsertEmoticonIcon from\"@material-ui/icons/InsertEmoticon\";import MicIcon from\"@material-ui/icons/Mic\";import\"./Chat.css\";import{useParams}from\"react-router-dom\";import db from\"./firebase\";import{useStateValue}from\"./StateProvider\";import firebase from\"firebase/compat/app\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Chat(){var _messages,_messages$timestamp;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),seed=_useState4[0],setSeed=_useState4[1];var _useParams=useParams(),roomID=_useParams.roomID;var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),roomName=_useState6[0],setRoomName=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),user=_useStateValue2[0].user,dispatch=_useStateValue2[1];useEffect(function(){if(roomID){db.collection('rooms').doc(roomID).onSnapshot(function(snapshot){return setRoomName(snapshot.data().name);});db.collection(\"rooms\").doc(roomID).collection(\"messages\").orderBy('timestamp','asc').onSnapshot(function(snapshot){return setMessages(snapshot.docs.map(function(doc){return doc.data();}));});}},[roomID]);/* icon changes whenever roomID is detected changing */useEffect(function(){setSeed(Math.floor(Math.random()*5000));},[roomID]);/*e as event | preventdefault stops refresh*/var sendMessage=function sendMessage(e){e.preventDefault();console.log('You typed >>> ',input);db.collection('rooms').doc(roomID).collection('messages').add({message:input,name:user.displayName,timestamp:firebase.firestore.FieldValue.serverTimestamp()});setInput(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat__header\",children:[/*#__PURE__*/_jsx(Avatar,{src:\"https://avatars.dicebear.com/api/human/\".concat(seed,\".svg\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__headerInfo\",children:[/*#__PURE__*/_jsx(\"h3\",{children:roomName}),/*#__PURE__*/_jsxs(\"p\",{children:[\"last seen\",\" \",new Date((_messages=messages[messages.length-1])===null||_messages===void 0?void 0:(_messages$timestamp=_messages.timestamp)===null||_messages$timestamp===void 0?void 0:_messages$timestamp.toDate()).toUTCString()]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__headerRight\",children:[/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(SearchOutlined,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(AttachFile,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(MoreVert,{})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat__body\",children:messages.map(function(message){var _message$timestamp;return/*#__PURE__*/_jsxs(\"p\",{className:\"chat__message \".concat(message.name===user.displayName&&\"chat__reciever\"),children:[/*#__PURE__*/_jsx(\"span\",{className:\"chat__name\",children:message.name}),message.message,/*#__PURE__*/_jsx(\"span\",{className:\"chat__timestamp\",children:new Date((_message$timestamp=message.timestamp)===null||_message$timestamp===void 0?void 0:_message$timestamp.toDate()).toUTCString()})]});})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__footer\",children:[/*#__PURE__*/_jsx(InsertEmoticonIcon,{}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"input\",{value:input,onChange:function onChange(e){return setInput(e.target.value);},placeholder:\"Type a message\",type:\"text\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,type:\"submit\",children:\"Send a message\"})]}),/*#__PURE__*/_jsx(MicIcon,{})]})]});}export default Chat;","map":{"version":3,"sources":["/Users/havok/KBProjects/KBproject_AniChat/AniChat/src/Chat.js"],"names":["React","useState","useEffect","Avatar","IconButton","AttachFile","MoreVert","SearchOutlined","InsertEmoticonIcon","MicIcon","useParams","db","useStateValue","firebase","Chat","input","setInput","seed","setSeed","roomID","roomName","setRoomName","messages","setMessages","user","dispatch","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","sendMessage","e","preventDefault","console","log","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","Date","length","toDate","toUTCString","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport \"./Chat.css\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport firebase from \"firebase/compat/app\";\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const { roomID } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch ] = useStateValue();\n\n    useEffect(() => {\n        if (roomID) {\n            db.collection('rooms')\n            .doc(roomID)\n            .onSnapshot((snapshot) => \n                setRoomName(snapshot.data().name));\n\n            db.collection(\"rooms\")\n                .doc(roomID)\n                .collection(\"messages\")\n                .orderBy('timestamp', 'asc')\n                .onSnapshot(snapshot => (\n                    setMessages(snapshot.docs.map(doc => doc.data()))\n            ))\n        }\n    }, [roomID]);\n\n    /* icon changes whenever roomID is detected changing */\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomID]);\n\n    /*e as event | preventdefault stops refresh*/\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log('You typed >>> ', input);\n\n        db.collection('rooms').doc(roomID).collection('messages').add({\n            message:input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setInput(\"\");\n    }\n\n    return (\n        <div className='chat'>\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>\n                        last seen{\" \"}\n                        {new Date(\n                        messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}\n                    </p>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>    \n        \n            <div className=\"chat__body\">\n                {messages.map(message => (\n                    <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat__timestamp\">\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\n                        </span>\n                    </p>\n                ))}\n\n            </div>  \n\n            <div className=\"chat__footer\">\n                <InsertEmoticonIcon />\n                <form>\n                    <input \n                        value={input} \n                        onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" \n                        type=\"text\" \n                    />\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <MicIcon />\n            </div>  \n        </div>\n    )\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}