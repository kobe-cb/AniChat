{"ast":null,"code":"import _slicedToArray from\"/Users/havok/KBProjects/KBproject_AniChat/AniChat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Avatar}from\"@material-ui/core\";import'./SidebarChat.css';import db from'./firebase';import{Link}from\"react-router-dom\";//avatars.dicebear site returns svg icon based on end string (rand)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SidebarChat(_ref){var _messages$;var id=_ref.id,name=_ref.name,addNewChat=_ref.addNewChat;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),seed=_useState2[0],setSeed=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];useEffect(function(){if(id){db.collection(\"rooms\").doc(id).collection(\"messages\").orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){return setMessages(snapshot.docs.map(function(doc){return doc.data();}));});}},[id]);useEffect(function(){setSeed(Math.floor(Math.random()*5000));},[]);var createChat=function createChat(){var roomName=prompt(\"Please enter name for chat room\");if(roomName){db.collection(\"rooms\").add({name:roomName});}};return!addNewChat?/*#__PURE__*/_jsx(Link,{to:\"/rooms/\".concat(id),children:/*#__PURE__*/_jsxs(\"div\",{className:\"sidebarChat\",children:[/*#__PURE__*/_jsx(Avatar,{src:\"https://avatars.dicebear.com/api/human/\".concat(seed,\".svg\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"sidebarChat__info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:name}),/*#__PURE__*/_jsx(\"p\",{children:(_messages$=messages[0])===null||_messages$===void 0?void 0:_messages$.message})]})]})}):/*#__PURE__*/_jsx(\"div\",{onClick:createChat,className:\"sidebarChat\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Add new Chat\"})});}export default SidebarChat;","map":{"version":3,"sources":["/Users/havok/KBProjects/KBproject_AniChat/AniChat/src/SidebarChat.js"],"names":["React","useEffect","useState","Avatar","db","Link","SidebarChat","id","name","addNewChat","seed","setSeed","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","createChat","roomName","prompt","add","message"],"mappings":"oIAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA;wFACA,QAASC,CAAAA,WAAT,MAA+C,mBAAxBC,CAAAA,EAAwB,MAAxBA,EAAwB,CAApBC,IAAoB,MAApBA,IAAoB,CAAdC,UAAc,MAAdA,UAAc,CAC3C,cAAwBP,QAAQ,CAAC,EAAD,CAAhC,wCAAOQ,IAAP,eAAaC,OAAb,eACA,eAAgCT,QAAQ,CAAC,EAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eAEAZ,SAAS,CAAC,UAAM,CACZ,GAAIM,EAAJ,CAAQ,CACJH,EAAE,CAACU,UAAH,CAAc,OAAd,EACKC,GADL,CACSR,EADT,EAEKO,UAFL,CAEgB,UAFhB,EAGKE,OAHL,CAGa,WAHb,CAG0B,MAH1B,EAIKC,UAJL,CAIgB,SAACC,QAAD,QACRL,CAAAA,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,SAACL,GAAD,QAASA,CAAAA,GAAG,CAACM,IAAJ,EAAT,EAAlB,CAAD,CADH,EAJhB,EAOH,CACJ,CAVQ,CAUN,CAACd,EAAD,CAVM,CAAT,CAYAN,SAAS,CAAC,UAAM,CACZU,OAAO,CAACW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,IAA3B,CAAD,CAAP,CACH,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAMC,CAAAA,QAAQ,CAAGC,MAAM,CAAC,iCAAD,CAAvB,CAEA,GAAID,QAAJ,CAAc,CACVtB,EAAE,CAACU,UAAH,CAAc,OAAd,EAAuBc,GAAvB,CAA2B,CACvBpB,IAAI,CAAEkB,QADiB,CAA3B,EAGH,CACJ,CARD,CAUA,MAAO,CAACjB,UAAD,cACH,KAAC,IAAD,EAAM,EAAE,kBAAYF,EAAZ,CAAR,uBACI,aAAK,SAAS,CAAC,aAAf,wBACI,KAAC,MAAD,EAAQ,GAAG,kDAA4CG,IAA5C,QAAX,EADJ,cAEI,aAAK,SAAS,CAAC,mBAAf,wBACI,oBAAKF,IAAL,EADJ,cAEI,+BAAII,QAAQ,CAAC,CAAD,CAAZ,qCAAI,WAAaiB,OAAjB,EAFJ,GAFJ,GADJ,EADG,cAWH,YAAK,OAAO,CAAEJ,UAAd,CACA,SAAS,CAAC,aADV,uBAEI,oCAFJ,EAXJ,CAgBH,CAED,cAAenB,CAAAA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Avatar } from \"@material-ui/core\";\nimport './SidebarChat.css';\nimport db from './firebase';\nimport { Link } from \"react-router-dom\";\n\n//avatars.dicebear site returns svg icon based on end string (rand)\nfunction SidebarChat({ id, name, addNewChat }) {\n    const [seed, setSeed] = useState('');\n    const [messages, setMessages] = useState(\"\");\n\n    useEffect(() => {\n        if (id) {\n            db.collection(\"rooms\")\n                .doc(id)\n                .collection(\"messages\")\n                .orderBy(\"timestamp\", \"desc\")\n                .onSnapshot((snapshot) => \n                    setMessages(snapshot.docs.map((doc) => doc.data()))\n            );\n        }\n    }, [id]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [])\n\n    const createChat = () => {\n        const roomName = prompt(\"Please enter name for chat room\");\n\n        if (roomName) {\n            db.collection(\"rooms\").add({\n                name: roomName,\n            });\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`}>\n            <div className='sidebarChat'>\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"sidebarChat__info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n    ): (\n        <div onClick={createChat}\n        className=\"sidebarChat\">\n            <h2>Add new Chat</h2>\n        </div>\n    );\n}\n\nexport default SidebarChat\n"]},"metadata":{},"sourceType":"module"}